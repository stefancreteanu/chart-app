[{"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\App.js":"1","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\index.js":"2","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Profile.jsx":"3","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Login.jsx":"4","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Home.jsx":"5","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Register.jsx":"6","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\hooks\\useLoginStatus.jsx":"7","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Dashboard\\Dashboard.jsx":"8","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Dashboard\\createChartForm.jsx":"9","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Dashboard\\fetchChart.jsx":"10","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Navigation.jsx":"11","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Chat.jsx":"12"},{"size":1060,"mtime":1624189730449,"results":"13","hashOfConfig":"14"},{"size":244,"mtime":1623176246199,"results":"15","hashOfConfig":"14"},{"size":1949,"mtime":1624742781303,"results":"16","hashOfConfig":"14"},{"size":4179,"mtime":1624229930422,"results":"17","hashOfConfig":"14"},{"size":4775,"mtime":1624096156159,"results":"18","hashOfConfig":"14"},{"size":6166,"mtime":1624743107205,"results":"19","hashOfConfig":"14"},{"size":521,"mtime":1624193954312,"results":"20","hashOfConfig":"14"},{"size":1326,"mtime":1624190646615,"results":"21","hashOfConfig":"14"},{"size":5024,"mtime":1623832936519,"results":"22","hashOfConfig":"14"},{"size":7651,"mtime":1624574659196,"results":"23","hashOfConfig":"14"},{"size":2766,"mtime":1624299671626,"results":"24","hashOfConfig":"14"},{"size":2863,"mtime":1624805603857,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1re5ido",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\App.js",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\index.js",[],["52","53"],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Profile.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Login.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Home.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Register.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\hooks\\useLoginStatus.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Dashboard\\createChartForm.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Dashboard\\fetchChart.jsx",["54"],"import React, {useState, useEffect} from 'react';\r\nimport {Bar, Doughnut, Line, Pie} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useMediaPredicate } from 'react-media-hook'\r\n\r\nconst FetchChart = () => {\r\n    const token = window.localStorage.getItem('token');\r\n    const [chartsData, setChartsData] = useState([]);\r\n    const [chartType, setChartType] = useState(\"Line\");\r\n    const [chartsOptions, setChartsOptions] = useState([]);\r\n\r\n    const smallerThan567 = useMediaPredicate(\"(max-width: 360px)\")\r\n    const smallerThan767 = useMediaPredicate(\"(max-width: 767px)\")\r\n    const biggerThan768 = useMediaPredicate(\"(min-width: 768px)\")\r\n\r\n    const bigSize = {\r\n        width: 750,\r\n        height: 500\r\n    }\r\n\r\n    const smallSize = {\r\n        width: 300,\r\n        height: 300\r\n    }\r\n    \r\n    const smallerSize = {\r\n        width: 240,\r\n        height: 240\r\n    }\r\n\r\n    const fetchChart = () => {\r\n        axios.get(\"http://localhost:5500/user-charts\", {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }).then(res => {\r\n            const dc = res.data.chart.map((x, key) => ({\r\n                key: {key},\r\n                labels: x.labels.map(label => label.Label),\r\n                id: x.id,\r\n                datasets: [{\r\n                    label: x.datalabel,\r\n                    data: x.chartdata.map(x => x.Data),\r\n                    backgroundColor: x.color.map(x => x.Color),\r\n                    borderWidth: 4\r\n                }]}))\r\n\r\n            const ops = res.data.chart.map((x, key) => ({\r\n                key: {key},\r\n                id: x.id,\r\n                responsive: true,\r\n                title: {\r\n                    display: true,\r\n                    text: x.title\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                        autoSkip: true,\r\n                        maxTicksLimit: 10,\r\n                        beginAtZero: true\r\n                        },\r\n                        gridLines: {\r\n                        display: true\r\n                        }\r\n                    }],\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                        display: true\r\n                        }\r\n                    }]\r\n                }\r\n            }))\r\n            setChartsOptions(ops);\r\n            setChartsData(dc);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const deleteChart = (chartsId) => {\r\n        axios.post('http://localhost:5500/delete-chart', {\r\n            id: chartsId\r\n        })\r\n        const filteredCharts = chartsData.filter(filter => filter.id !== chartsId);\r\n        setChartsData(filteredCharts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const ac = new AbortController();\r\n        fetchChart()\r\n        return () => ac.abort();\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const renderLine = (chartData) => {\r\n        if(chartType === \"Line\") {\r\n            return (\r\n                <div className=\"chart-component\">\r\n                    <Line className=\"chart-type\"\r\n                        data={chartData}\r\n                        options={chartData.chartOptions}\r\n                        {...biggerThan768 && bigSize}\r\n                        {...smallerThan767 && smallSize}\r\n                        {...smallerThan567 && smallerSize}\r\n                    />\r\n                    {biggerThan768 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-25\">Delete Chart</Button>}\r\n                    {smallerThan767 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-50\">Delete Chart</Button>}\r\n                </div>\r\n            )\r\n        } else if (chartType === \"Bar\") {\r\n            return (\r\n                <div className=\"chart-component\">\r\n                    <Bar className=\"chart-type\"\r\n                        data={chartData}\r\n                        options={chartData.chartOptions}\r\n                        {...biggerThan768 && bigSize}\r\n                        {...smallerThan767 && smallSize}\r\n                        {...smallerThan567 && smallerSize}\r\n                    />\r\n                    {biggerThan768 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-25\">Delete Chart</Button>}\r\n                    {smallerThan767 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-50\">Delete Chart</Button>}\r\n                </div>\r\n            )\r\n        } else if (chartType === \"Pie\") {\r\n            return (\r\n                <div className=\"chart-component\">\r\n                    <Pie className=\"chart-type\"\r\n                        data={chartData}\r\n                        options={chartData.chartOptions}\r\n                        {...biggerThan768 && bigSize}\r\n                        {...smallerThan767 && smallSize}\r\n                        {...smallerThan567 && smallerSize}\r\n                    />\r\n                    {biggerThan768 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-25\">Delete Chart</Button>}\r\n                    {smallerThan767 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-50\">Delete Chart</Button>}\r\n                </div>\r\n            )\r\n        } else if (chartType === \"Doughnut\") {\r\n            return (\r\n                <div className=\"chart-component\">\r\n                    <Doughnut className=\"chart-type\"\r\n                        data={chartData}\r\n                        options={chartData.chartOptions}\r\n                        {...biggerThan768 && bigSize}\r\n                        {...smallerThan767 && smallSize}\r\n                        {...smallerThan567 && smallerSize}\r\n                    />\r\n                    {biggerThan768 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-25\">Delete Chart</Button>}\r\n                    {smallerThan767 && <Button variant=\"dark\" onClick={() => deleteChart(chartData.id)} className=\"w-50\">Delete Chart</Button>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    if(chartsData.length >= 1) {\r\n        return (\r\n            <div className=\"chart-container\">\r\n                <div className=\"selection-area\">\r\n                    <span style={{fontWeight: \"bold\"}}>Chart Type</span>\r\n                    <select name=\"chartType\" className=\"chart-selection\" defaultValue={chartType} onChange = {(e) => {setChartType(e.target.value)}}>\r\n                        <option value=\"Line\">Line</option>\r\n                        <option value=\"Bar\">Bar</option>\r\n                        <option value=\"Pie\">Pie</option>\r\n                        <option value=\"Doughnut\">Dougnut</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"charts\"> \r\n                    {chartsData.map(chartData => { // eslint-disable-next-line\r\n                        chartsOptions.map(chart => { \r\n                            if(chart.id === chartData.id) { \r\n                                chartData.chartOptions = chart \r\n                            }\r\n                        }) \r\n                    })} \r\n                    {chartsData.map(chartData => renderLine(chartData))}  \r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"chart-container\">\r\n                <p>There are no charts displayed yet.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FetchChart;","C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Navigation.jsx",[],"C:\\Users\\STEFI\\Documents\\GitHub\\stocks\\frontend\\src\\components\\Chat.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":169,"column":47,"nodeType":"61","messageId":"62","endLine":169,"endColumn":49},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]